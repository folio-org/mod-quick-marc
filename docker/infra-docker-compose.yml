services:
  postgres:
    image: postgres:16-alpine
    ports:
      - ${DB_PORT}:5432
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    networks:
      - mod-quick-marc-local

  pgadmin:
    image: dpage/pgadmin4:9.4
    ports:
      - ${PGADMIN_PORT}:80
    volumes:
      - "pgadmin-data:/var/lib/pgadmin"
    environment:
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    networks:
      - mod-quick-marc-local

  kafka:
    image: apache/kafka-native
    networks:
      - mod-quick-marc-local
    ports:
      - ${KAFKA_PORT}:9093
      - 29092:29092
    environment:
      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: CONTROLLER://localhost:9091,HOST://0.0.0.0:29092,DOCKER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:29092,DOCKER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT
      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091
      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      # Required for a single node cluster
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: ghcr.io/kafbat/kafka-ui:latest
    networks:
      - mod-quick-marc-local
    ports:
      - ${KAFKA_UI_PORT}:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:${KAFKA_PORT}
    depends_on:
      - kafka

  kafka-topic-init:
    image: apache/kafka:latest
    depends_on:
      - kafka
    environment:
      KAFKA_HOST: kafka
      KAFKA_PORT: 9093
      ENV: ${ENV}
      KAFKA_TOPIC_PARTITIONS: ${KAFKA_TOPIC_PARTITIONS}
    volumes:
      - ./kafka-init.sh:/usr/bin/kafka-init.sh
    entrypoint: ["bash", "/usr/bin/kafka-init.sh"]
    networks:
      - mod-quick-marc-local

  api-mock:
    image: wiremock/wiremock:3.8.0
    networks:
      - mod-quick-marc-local
    command:
      - "--verbose"
    ports:
      - "9130:8080"
    volumes:
      - ../src/test/resources/mappings:/home/wiremock/mappings
      - ../src/test/resources/__files:/home/wiremock/__files

networks:
  mod-quick-marc-local:
    driver: "bridge"

volumes:
  pgadmin-data:
    driver: local
