spring:
  application:
    name: mod-quick-marc
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_DATABASE:modules}
    password: ${DB_PASSWORD:folio_admin}
    username: ${DB_USERNAME:folio_admin}
    hikari:
      register-mbeans: true
  kafka:
    bootstrap-servers: ${KAFKA_HOST:localhost}:${KAFKA_PORT:29092}
    security:
      protocol: ${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
    ssl:
      key-store-password: ${KAFKA_SSL_KEYSTORE_PASSWORD:}
      key-store-location: ${KAFKA_SSL_KEYSTORE_LOCATION:}
      trust-store-password: ${KAFKA_SSL_TRUSTSTORE_PASSWORD:}
      trust-store-location: ${KAFKA_SSL_TRUSTSTORE_LOCATION:}
    consumer:
      enable-auto-commit: true
      auto-commit-interval: 1000
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true
  liquibase:
    changeLog: classpath:db/changelog/changelog-master.xml
    enabled: true
  jackson:
    default-property-inclusion: NON_EMPTY
  cache:
    cache-names:
      - job-profiles
      - qm-update-results
      - data-import-results
      - linking-rules-results
      - specifications
    caffeine:
      spec: maximumSize=500,expireAfterAccess=3600s
  cloud:
    openfeign:
      okhttp:
        enabled: true
  sql:
    init:
      # to boot up application despite of any DB connection issues
      continue-on-error: true
  docker:
    compose:
      enabled: true
      file: ./docker/infra-docker-compose.yml

folio:
  environment: ${ENV:folio}
  tenant:
    validation:
      enabled: true
  logging:
    request:
      enabled: false
    feign:
      enabled: true
      level: full
  kafka:
    numberOfPartitions: ${NUMBER_OF_PARTITIONS:5}
    replicationFactor: ${REPLICATION_FACTOR:1}
    listener:
      di-completed:
        concurrency: ${KAFKA_EVENTS_CONCURRENCY:2}
        topic-pattern: ${KAFKA_EVENTS_CONSUMER_PATTERN:(${folio.environment}\.)[a-zA-z0-9-]+\.\w+\.DI_COMPLETED}
        group-id: ${folio.environment}-mod-quick-marc-di-completed-group
      di-error:
        concurrency: ${KAFKA_EVENTS_CONCURRENCY:2}
        topic-pattern: ${KAFKA_EVENTS_CONSUMER_PATTERN:(${folio.environment}\.)[a-zA-z0-9-]+\.\w+\.DI_ERROR}
        group-id: ${folio.environment}-mod-quick-marc-di-error-group
      qm-completed:
        concurrency: ${KAFKA_EVENTS_CONCURRENCY:2}
        topic-pattern: ${KAFKA_EVENTS_CONSUMER_PATTERN:(${folio.environment}\.)[a-zA-z0-9-]+\.\w+\.QM_COMPLETED}
        group-id: ${folio.environment}-mod-quick-marc-qm-group
      specification-updated:
        concurrency: ${KAFKA_EVENTS_CONCURRENCY:1}
        topic-pattern: ${KAFKA_EVENTS_CONSUMER_PATTERN:(${folio.environment}\.)(.*\.)specification-storage\.specification\.updated}
        group-id: ${folio.environment}-mod-quick-marc-specification-group
management:
  endpoints:
    web:
      exposure:
        include: info,health,liquibase,threaddump,heapdump,loggers
      base-path: /admin
  endpoint:
    loggers:
      access: unrestricted
server:
  port: 8081

logging:
  level:
    com.zaxxer.hikari: DEBUG
