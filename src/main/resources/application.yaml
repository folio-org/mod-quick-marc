spring:
  application:
    name: mod-quick-marc
  datasource:
    # to boot up application despite of any DB connection issues
    continue-on-error: true
    password: ${DB_PASSWORD:pass}
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_DATABASE:db}
    username: ${DB_USERNAME:user}
  kafka:
    bootstrap-servers: ${KAFKA_HOST:localhost}:${KAFKA_PORT:9092}
    consumer:
      enable-auto-commit: true
      auto-commit-interval: 1000
  jpa:
    open-in-view: false
    database-platform: org.hibernate.dialect.PostgreSQL10Dialect
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL10Dialect
        format_sql: true
    show-sql: false
  liquibase:
    changeLog: classpath:db/changelog/changelog-master.xml
    enabled: true
  jackson:
    default-property-inclusion: NON_EMPTY
  cache:
    cache-names:
      - job-profiles
    caffeine:
      spec: maximumSize=500,expireAfterAccess=3600s
folio:
  environment: ${ENV:folio}
  qm:
    cache:
      update:
        max-size: 1000
        duration:
          min: 10
    creation-status:
      clear:
        initial-delay-ms: 3_600_000
        fixed-delay-ms: 86_400_000
  tenant:
    validation:
      enabled: true
  logging:
    request:
      enabled: false
    feign:
      enabled: true
      level: basic
  kafka:
    numberOfPartitions: ${NUMBER_OF_PARTITIONS:5}
    replicationFactor: ${REPLICATION_FACTOR:1}
    listener:
      di:
        concurrency: ${KAFKA_EVENTS_CONCURRENCY:1}
        topic-pattern: ${KAFKA_EVENTS_CONSUMER_PATTERN:(${folio.environment}\.)[a-zA-z0-9-]+\.\w+\.(DI_COMPLETED|DI_ERROR)}
        group-id: ${folio.environment}-mod-quick-marc-di-group
management:
  endpoints:
    web:
      exposure:
        include: info,health,env,httptrace
      base-path: /admin
  health:
    defaults:
      enabled: false
    readinessstate:
      enabled: true
server:
  port: 8081
