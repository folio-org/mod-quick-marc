spring:
  application:
    name: mod-quick-marc
  datasource:
    username: folio_admin
    password: password
  liquibase:
    changeLog: classpath:db/changelog/changelog-master.xml
    enabled: true
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  cache:
    cache-names:
      - job-profiles
      - qm-update-results
      - data-import-results
      - linking-rules-results
      - specifications
    caffeine:
      spec: maximumSize=500,expireAfterAccess=3600s
  kafka:
    bootstrap-servers: ${spring.embedded.kafka.brokers}
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration
logging:
  level:
    io.zonky.test.db.postgres: FATAL
folio:
  cache:
    spec:
      specifications:
        maximum-size: 500
        ttl: 24h
  environment: ${ENV:folio}
  logging:
    request:
      enabled: false
    feign:
      enabled: false
      level: full
  kafka:
    numberOfPartitions: 1
    replicationFactor: 1
    topics:
      - name: test
        numPartitions: ${NUMBER_OF_PARTITIONS:1}
        replicationFactor: ${REPLICATION_FACTOR:1}
    listener:
      di-completed:
        concurrency: 1
        topic-pattern: ${KAFKA_EVENTS_CONSUMER_PATTERN:(${folio.environment}\.)[a-zA-z0-9-]+\.\w+\.DI_COMPLETED}
        group-id: ${folio.environment}-mod-quick-marc-di-completed-group
      di-error:
        concurrency: 1
        topic-pattern: ${KAFKA_EVENTS_CONSUMER_PATTERN:(${folio.environment}\.)[a-zA-z0-9-]+\.\w+\.DI_ERROR}
        group-id: ${folio.environment}-mod-quick-marc-di-error-group
      qm-completed:
        concurrency: 1
        topic-pattern: ${KAFKA_EVENTS_CONSUMER_PATTERN:(${folio.environment}\.)[a-zA-z0-9-]+\.\w+\.QM_COMPLETED}
        group-id: ${folio.environment}-mod-quick-marc-qm-group
